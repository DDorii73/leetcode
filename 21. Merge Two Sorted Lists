# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        dummy = ListNode()
        tail = dummy
        
        # 두 리스트를 순회하면서 더 작은 요소를 결과 리스트에 추가합니다.
        while list1 and list2:
            if list1.val < list2.val:
                tail.next = list1
                list1 = list1.next
            else:
                tail.next = list2
                list2 = list2.next
            tail = tail.next
        
        # 한 리스트를 모두 순회한 후, 나머지 리스트의 요소를 모두 추가합니다.
        if list1:
            tail.next = list1
        elif list2:
            tail.next = list2
        
        # 더미 노드 다음 노드를 반환하여, 실제 결과 리스트의 시작을 표시합니다.
        return dummy.next
