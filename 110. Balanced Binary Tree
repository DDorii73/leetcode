# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isBalanced(self, root: Optional[TreeNode]) -> bool:
        def traverse(head):
            if not head:
                return 0, True
            left, left_balanced = traverse(head.left)
            right, right_balanced = traverse(head.right)
            is_balanced = left_balanced and right_balanced and abs(left-right)<=1
            return max(left, right) + 1, is_balanced
        r1, r2 = traverse(root)
        return r2
    
